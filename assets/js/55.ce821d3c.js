(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{395:function(n,s,a){"use strict";a.r(s);var e=a(8),t=Object(e.a)({},(function(){var n=this,s=n._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("2024年的第一篇博客，打算和大家分享一下2023年前端比较火的一些技术。我自己的一个感觉是，国内外的前端的发展路径还是有一些差异的，例如今年最火的 "),s("code",[n._v("shadcn-ui")]),n._v(" 这个项目，是今年JS语言所有的项目中获得Star最多的，但是发现国内鲜有文章讨论。")]),n._v(" "),s("p",[n._v("定时去看看国内外目前比较火的一些项目，看看人家的一些设计思路，避免自己的技术思维太局限。我挑了以下几个比较热门的项目，主要分析其设计思路。")]),n._v(" "),s("h2",{attrs:{id:"shadcn-ui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#shadcn-ui"}},[n._v("#")]),n._v(" shadcn/ui")]),n._v(" "),s("p",[n._v("shadcn/ui 是一个基于React的组件库，但是官方网站却明确说自己不是组件库，一方面来说他的UI是基于RadixUI  和 Tailwind CSS的，另一方面是他的组件的分发并不是基于NPM的，而是官方提供了一个命令，通过输入命令会直接将组件的源码直接Copy到当前项目仓库中。")]),n._v(" "),s("p",[n._v("shadcn/ui 的流行于 "),s("strong",[n._v("Tailwind CSS")]),n._v(" 以及 对于"),s("strong",[n._v("React Server Component")]),n._v("兼容密切相关。我觉得其设计的宗旨是便于进行二次定制开发。通过源码注入的方式相比npm包的引入具有更大的灵活性，RadixUI本身是一个不包含样式的"),s("code",[n._v("无头组件库")]),n._v("，shadcn/ui 的本质是帮用户写了一个默认的样式，而这个样式我们可以更灵活的更改。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// 依赖tailwindcss\nnpm install -D tailwindcss postcss autoprefixer\nnpx tailwindcss init -p\n\nnpx shadcn-ui@latest init\n✔ Would you like to use TypeScript (recommended)? … no / yes\n✔ Which style would you like to use? › Default\n✔ Which color would you like to use as base color? › Slate\n✔ Where is your global CSS file? … app/globals.css\n✔ Would you like to use CSS variables for colors? … no / yes\n✔ Are you using a custom tailwind prefix eg. tw-? (Leave blank if not) …\n✔ Where is your tailwind.config.js located? … tailwind.config.js\n✔ Configure the import alias for components: … @/components\n✔ Configure the import alias for utils: … @/lib/utils\n✔ Are you using React Server Components? … no / yes\n✔ Write configuration to components.json. Proceed? … yes\n\n✔ Writing components.json...\n✔ Initializing project...\n✔ Installing dependencies...\n\nSuccess! Project initialization completed.\n\nnpx shadcn-ui@latest add button\n\n✔ Done\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br")])]),s("p",[n._v("自动生成的组件")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('import * as React from "react"\nimport { Slot } from "@radix-ui/react-slot"\nimport { cva, type VariantProps } from "class-variance-authority"\n\nimport { cn } from "@/lib/utils"\n\nconst buttonVariants = cva(\n  "inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50",\n  {\n    variants: {\n      variant: {\n        default: "bg-primary text-primary-foreground hover:bg-primary/90",\n        destructive:\n          "bg-destructive text-destructive-foreground hover:bg-destructive/90",\n        outline:\n          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",\n        secondary:\n          "bg-secondary text-secondary-foreground hover:bg-secondary/80",\n        ghost: "hover:bg-accent hover:text-accent-foreground",\n        link: "text-primary underline-offset-4 hover:underline",\n      },\n      size: {\n        default: "h-10 px-4 py-2",\n        sm: "h-9 rounded-md px-3",\n        lg: "h-11 rounded-md px-8",\n        icon: "h-10 w-10",\n      },\n    },\n    defaultVariants: {\n      variant: "default",\n      size: "default",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : "button"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = "Button"\n\nexport { Button, buttonVariants }\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br")])]),s("p",[n._v("使用Button")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('import { Button } from "@/components/ui/button"\n \nexport default function Home() {\n  return (\n    <div>\n      <Button>Click me</Button>\n    </div>\n  )\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br")])]),s("h2",{attrs:{id:"bun"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bun"}},[n._v("#")]),n._v(" Bun")]),n._v(" "),s("p",[n._v("Bun 大家应该都很熟悉，按照官方的描述，Bun是一个高性能的Node.js运行时，包管理器，打包器，测试命令，可谓是前端一条龙服务。")]),n._v(" "),s("p",[n._v("在2022年是获得Star最多的项目，在23年，Bun发布了第一个正式版本。")]),n._v(" "),s("p",[n._v("Bun设计思路就是为了替代Node.js的，因此相比于Node.js除去4倍的性能优势外，Bun几户考虑到了现代前端的所有场景。简单举两个例子：")]),n._v(" "),s("ol",[s("li",[n._v("默认可以运行js、ts、jsx等文件，因此不需要依赖babel、tsc、ts-node等编译插件。")]),n._v(" "),s("li",[n._v("bun本身就是一个JS打包器，因此也不需要webpack、esbuild这些构建工具了。")])]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("Bun is a fast JavaScript runtime, package manager, bundler, and test runner. (1.0.14 (d8be3e51))\n\nUsage: bun <command> [...flags] [...args]\n\nCommands:\n  run       ./my-script.ts       Execute a file with Bun\n            lint                 Run a package.json script\n  test                           Run unit tests with Bun\n  x         eslint               Execute a package binary (CLI), installing if needed (bunx)\n  repl                           Start a REPL session with Bun\n\n  install                        Install dependencies for a package.json (bun i)\n  add       next-app             Add a dependency to package.json (bun a)\n  remove    @zarfjs/zarf         Remove a dependency from package.json (bun rm)\n  update    moment               Update outdated dependencies\n  link      [<package>]          Register or link a local npm package\n  unlink                         Unregister a local npm package\n  pm <subcommand>                Additional package management utilities\n\n  build     ./a.ts ./b.jsx       Bundle TypeScript & JavaScript into a single file\n\n  init                           Start an empty Bun project from a blank template\n  create    zod                  Create a new project from a template (bun c)\n  upgrade                        Upgrade to latest version of Bun.\n  <command> --help               Print help text for command.\n\nLearn more about Bun:            https://bun.sh/docs\nJoin our Discord community:      https://bun.sh/discord\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br")])]),s("h2",{attrs:{id:"tailwind-css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tailwind-css"}},[n._v("#")]),n._v(" Tailwind CSS")]),n._v(" "),s("p",[n._v("tailwindcss 我感觉是目前国外最火的项目了，TailwindCSS的核心理念是提供原子化的CSS，每一个类名代表着一个样式。")]),n._v(" "),s("p",[n._v("我第一次接触Tailwind CSS的时候，是22年重构了一版本博客，当时选择了Astro + Tailwind CSS的方案。我对Tailwind的第一反应是，这玩意不就是另一种inline css么，按照我之前一贯的想法HTML内应该是干净整洁的。而Tailwind CSS的方案很明显违反了这一原则。")]),n._v(" "),s("p",[n._v("但是一个项目，存在即合理，尤其是当这个项目这么火的时候，一定是有什么优势能让别人忽略掉这个技术所带来的劣势。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('<figure class="bg-slate-100 rounded-xl p-8 dark:bg-slate-800">\n  <img class="w-24 h-24 rounded-full mx-auto" src="/a.jpg" alt="" width="384" height="512">\n  <div class="pt-6 space-y-4">\n    <blockquote>\n      <p class="text-lg">\n        “Tailwind CSS is the only framework that I\'ve seen scale\n        on large teams. It’s easy to customize, adapts to any design,\n        and the build size is tiny.”\n      </p>\n    </blockquote>\n  </div>\n</figure>\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("p",[n._v("我觉得主要是因为CSS这个东西还是有一些痛点的：")]),n._v(" "),s("ol",[s("li",[n._v("CSS的上手成本其实不低，尤其是对于非前端的人员来说，上手CSS的成本比上手JS的成本要高得多。")]),n._v(" "),s("li",[n._v("复杂CSS实现的成本较高，耗费大量的开发时间。例如：复杂动画、响应式设计等。")]),n._v(" "),s("li",[n._v("技术人员用CSS很难写出比较美的样式。")]),n._v(" "),s("li",[n._v("书写样式过的过程需要大量定义class、className")]),n._v(" "),s("li",[n._v("HTML、CSS的分离 带来开发过程额外关注点的分离。")]),n._v(" "),s("li",[n._v("CSS 打包出来的体积比较大。CSS复用的难度比较高，虽然油Saas的Mixin等方案，但是实现起来也比较繁琐。")])]),n._v(" "),s("p",[n._v("Tailwind CSS的设计思想可以最大程度上去复用这些样式，这种原子化的方案也能避免CSS难以维护的问题。它提供的原子化的CSS基本上可以覆盖日常90%的开发所需要的样式，因此也基本不需要再去写CSS。同时还能满足高定制化的诉求。")]),n._v(" "),s("p",[n._v("当然我觉得Tailwind CSS的缺点也比较明显：")]),n._v(" "),s("ol",[s("li",[n._v("如果样式太复杂， 那么dom节点也比较复杂，可读性会极具下降。更别提tailwind css支持的dark、hover的这种模式的样式也需要写在class中。")]),n._v(" "),s("li",[n._v("有一定学习成本，对于熟悉写CSS的人来说，切换到这种形式可能一开始不是很习惯，不过我理解配合一些IDC的插件可以减少这种问题。")])]),n._v(" "),s("h2",{attrs:{id:"react-server-component"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#react-server-component"}},[n._v("#")]),n._v(" React Server Component")]),n._v(" "),s("p",[n._v("React 在21年年初就发布了服务端组件的草案。React组件本质上就是一个函数，在浏览器的运行时内可以执行，在浏览器端同样也能运行。但是因为运行时存在一些差异性，所以在组件的实现上以及功能点上都有不同。")]),n._v(" "),s("p",[n._v("RSC和我们之前聊的SSR在原理上类似，但是他们的确是两件事情。SSR的本质是将整个页面在服务端计算成HTML，然后由浏览器直接渲染HTML。相比于CSR，SSR主要有以下好处：")]),n._v(" "),s("ol",[s("li",[n._v("SEO 【例如一些企业的官网如果完全是CSR，那么搜索引擎可能会一直不收录】")]),n._v(" "),s("li",[n._v("首屏加载速度更快。")])]),n._v(" "),s("p",[n._v("但是SSR方案由于每次请求都会需要服务端重新渲染页面，如果是一些千人千面的场景，采用SSR且无法做缓存的场景，对于服务器的开销就会比较大。在应对高并发的场景就会有稳定性风险。")]),n._v(" "),s("p",[n._v("而我们今天提的RSC则和SSR没有太大的关联，按照React的官方的说法，React将组件分为Client Components和Client Compoents，官方推荐服务端组件负责那种轻交互重展示的组件，客户端组件负责那种重交互的场景。")]),n._v(" "),s("p",[n._v("在React团队的官方演示中，服务端组件和客户端组件是可以相互嵌套的。就和我们日常书写React的代码没有差别，只是其中的一部分在客户端执行渲染逻辑，其中一部分在服务端执行渲染逻辑。不过自己去看文档发现还是有一些限制的，这里就不展开了。")]),n._v(" "),s("p",[n._v("大致渲染过程：")]),n._v(" "),s("ol",[s("li",[n._v("服务端接受fetch请求，并将root组件渲染为一棵包含基本的HTML标签和客户端组件的占位符的树。序列化成后发送给浏览器。")]),n._v(" "),s("li",[n._v("浏览器反序列化这颗树，开始重建React树，用真正的客户端组件填充客户端组件占位符，最终渲染出最终的效果。")])]),n._v(" "),s("p",[n._v("对于RSC来说，本质上并不是彻底的服务端渲染。页面本身仍然是和CSR一样的最基础的模板，RSC则是通过Fetch请求来获取到序列化后的树。那么这样的好处是什么？")]),n._v(" "),s("p",[n._v("我们在纯Client组件场景下，一些偏展示型的组件中，某些数据依赖于接口，我们过去的逻辑是请求接口获取到数据然后再交给客户端组件进行渲染。而现在的逻辑则是直接从服务端拿到一个可以展示的组件。这个逻辑是好是坏，我觉得这个得分场景。")]),n._v(" "),s("p",[n._v("一个最简单的例子是Markdown，如果有前端进行解析Markdown，则需要在js中引入"),s("strong",[n._v("Marked")]),n._v("这些包，这些包需要在每一个浏览器中都被下载。而如果利用RSC的方式，则不需要。")])])}),[],!1,null,null,null);s.default=t.exports}}]);