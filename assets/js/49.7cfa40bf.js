(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{389:function(s,n,a){"use strict";a.r(n);var e=a(8),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("extern关键字在C++中通常有三个作用")]),s._v(" "),n("h3",{attrs:{id:"存储类指定符"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#存储类指定符"}},[s._v("#")]),s._v(" 存储类指定符")]),s._v(" "),n("p",[s._v("extern作为存储类指定符的时候，被声明的对象具有静态存储期。\n所谓静态存储期就是和static以及全域变量一样，在程序的运行周期都存在。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// extern.h\nextern int e;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// extern.cc\nint e = 0;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//main.cc\n#include "extern.h"\nvoid fun()\n{\n\te++;\n\tcout << e << endl;\n}\nint main()\n{\n\tfun();\n\tfun();\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("p",[s._v("运行这段代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ g++ extern.cc main.cc\n$ ./a.out\n1\n2\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),s._v(" "),n("p",[s._v("可以看到控制台输出1和2。")]),s._v(" "),n("p",[s._v("当然，用extern声明和不用extern有什么差别呢？")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("extern int i;\nint j;\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("以上这段代码，声明了i但是未定义，声明了j并且定义了j。")]),s._v(" "),n("p",[s._v("所以 extern常用作文件之间的变量共享。尤其是一些const对象，尤其是一些const对象，它的初始值不是一个常量表达式，但是有需要在文件内共享。这个时候我们就需要用到extern表达式了。")]),s._v(" "),n("h3",{attrs:{id:"c-调用c语言的函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#c-调用c语言的函数"}},[s._v("#")]),s._v(" C++调用C语言的函数")]),s._v(" "),n("p",[s._v("C++作为C语言的超集，应该是可以直接和C语言进行调用的。但是又由于C++和C语言存在诸多不同点，所以在生成对象文件的时候，其符号表(symbol tables)存在一些不同，导致链接失败。")]),s._v(" "),n("p",[s._v("举个例子：\n假如有一个函数\nint add(int, int);")]),s._v(" "),n("p",[s._v("在C语言的符号表中我们可以直接叫做"),n("code",[s._v("add")]),s._v("，但是如果在C++的符号表中，我们也叫做"),n("code",[s._v("add")]),s._v("就会有问题，因为C++是允许函数重载的。所以在C++中符号表很可能就是"),n("code",[s._v("addii")]),s._v("。就是因为这种原因，导致我们在C++中调用C语言的函数的时候，会找不到对应的函数。而extern关键字在这里又有一个比较特殊的作用。")]),s._v(" "),n("p",[s._v("我们先不用extern开始实现一个C++调用C的例子：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// add.c\nint add(int x, int y) {\n\treturn x + y;\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("//add.h\nint add(int x, int y);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// addp.cc\n#include "add.h"\nint main () {\n\tint x = 1;\n\tint y = 2;\n\tcout << add(x, y) << endl;\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("先编译C语言,再和C++文件一起编译")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ gcc -c add.c\n$ g++ addp.cc add.o\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("发现编译报错：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("/tmp/ccX07K44.o: In function `main':\naddp.cc:(.text+0x21): undefined reference to `add(int, int)'\ncollect2: error: ld returned 1 exit status\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("然后我们看一下符号表")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("$ objdump add.o -t\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[n("img",{attrs:{src:"/public/upload/cppextern1.png",alt:""}}),s._v("\n同理 再看一下C++生成的符号表")]),s._v(" "),n("p",[n("img",{attrs:{src:"/public/upload/cppextern2.png",alt:""}}),s._v("\n果然不一样。")]),s._v(" "),n("p",[s._v("于是我们加上extern关键字")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('//add.h\nextern "C" {\n\tint add(int x, int y);\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("接着编译运行，一路顺风。")]),s._v(" "),n("p",[s._v("这时候我们看一下C++的符号表：")]),s._v(" "),n("p",[n("img",{attrs:{src:"/public/upload/cppextern3.png",alt:""}}),s._v("\n果然一样了呢。")]),s._v(" "),n("h3",{attrs:{id:"模板的实例化控制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#模板的实例化控制"}},[s._v("#")]),s._v(" 模板的实例化控制")]),s._v(" "),n("p",[s._v("在比较大的项目中，对于一些模板的运用比较频繁。如果在多个独立编译的文件中用了相同的模板并且提供了相同的类型参数的时候，每个文件都会生成一个模板的实例，这是我们不愿意看到的。\n所以")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("extern template declaration; //实例化声明\ntemplate declaration;        //实例化定义\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("extern在这种情况下就显得比较有意义。")]),s._v(" "),n("p",[s._v("以上，欢迎吐槽。")])])}),[],!1,null,null,null);n.default=t.exports}}]);